package StrongholdCrusader.Map;import StrongholdCrusader.ClientPlayer;import StrongholdCrusader.GameObjects.GameObject;import java.io.Serializable;import java.util.LinkedList;import java.util.Queue;/** * Created by Baran on 5/29/2017. */public class Map implements Serializable {    public MapTile[][] tiles;    public LinkedList<GameObject> objects;    MapManager mapManager;    MapGUI gui;    ClientPlayer clientPlayer;    public Map(ClientPlayer clientPlayer) {        mapManager = new MapManager();        objects = new LinkedList<>();        gui = new MapGUI(this);        this.clientPlayer = clientPlayer;    }    public void setMapId(int id) {        tiles = mapManager.getMapTilesById(id);    }    public void showMapScreen() {        gui.showMap();        new Thread(gui).start();    }    public void sendGameEvent(int type, String message) {        clientPlayer.client.sendGameEvent(type, message);    }    public GameObject findGameObjectObjectById(int id) {        for (GameObject object : objects) {            if (object.id == id)                return object;        }        return null;    }    public static LinkedList<MapTile> adjacentList(Map map,MapTile tile)    {        LinkedList<MapTile> adjacents = new LinkedList<>();        for (int i = tile.position.x-1 ;i<tile.position.x+2;i++)        {            for (int j =tile.position.y-1 ; j<tile.position.y+2;j++)            {                if(i!= tile.position.x && j!=tile.position.y)                {                    try                    {                        if(!map.tiles[i][j].filled)                        {                            adjacents.add(map.tiles[i][j]);                        }                    }                    catch (Exception e)                    {                        ///Nothing                    }                }            }        }        return adjacents;    }    public LinkedList<MapTile> findRoute(MapTile start , MapTile end)    {        return null;    }    public boolean hasRoute(MapTile start,MapTile end)    {        ///TODO        return true;    }    public void showMessage(String message) {        gui.showMessage(message);    }}